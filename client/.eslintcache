[{"E:\\SilvenLEAF\\MyMovieList\\client\\src\\index.tsx":"1","E:\\SilvenLEAF\\MyMovieList\\client\\src\\reportWebVitals.ts":"2","E:\\SilvenLEAF\\MyMovieList\\client\\src\\App.tsx":"3","E:\\SilvenLEAF\\MyMovieList\\client\\src\\PAGES\\RootAppStructure.tsx":"4","E:\\SilvenLEAF\\MyMovieList\\client\\src\\contexts\\subContexts\\AuthContext.tsx":"5","E:\\SilvenLEAF\\MyMovieList\\client\\src\\contexts\\RootContext.tsx":"6","E:\\SilvenLEAF\\MyMovieList\\client\\src\\PAGES\\Wrapper.tsx":"7","E:\\SilvenLEAF\\MyMovieList\\client\\src\\contexts\\subContexts\\AllUserContext.tsx":"8","E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\layouts\\Navbar.tsx":"9","E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\layouts\\BackToTopButton.tsx":"10","E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\layouts\\Footer.tsx":"11","E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\layouts\\MobileFooterNav.tsx":"12","E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\home\\Home.tsx":"13","E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\profile\\Profile.tsx":"14","E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\profile\\UpdateProfile.tsx":"15","E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\contact\\Contact.tsx":"16","E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\profile\\UserProfile.tsx":"17","E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\profile\\UserList.tsx":"18","E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\actionPage\\ActionPage.tsx":"19","E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\auth\\signupLogin\\Signup.tsx":"20","E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\auth\\signupLogin\\Login.tsx":"21","E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\auth\\reset\\ResetPassword.tsx":"22","E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\auth\\verify\\VerifyDoor.tsx":"23","E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\auth\\verify\\VerifyEmail.tsx":"24","E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\auth\\signupLogin\\LogInForm.tsx":"25","E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\auth\\reset\\ForgottenForm.tsx":"26","E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\auth\\signupLogin\\SignUpForm.tsx":"27","E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\auth\\verify\\ChangeEmail.tsx":"28","E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\layouts\\navLinks\\SignedInLinks.tsx":"29","E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\layouts\\navLinks\\SignedOutLinks.tsx":"30","E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\layouts\\footerNavLinks\\SignedOutFooterLinks.tsx":"31","E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\layouts\\footerNavLinks\\SignedInFooterLinks.tsx":"32","E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\profile\\UserListItem.tsx":"33","E:\\SilvenLEAF\\MyMovieList\\client\\src\\helpers\\MyAlerts.tsx":"34","E:\\SilvenLEAF\\MyMovieList\\client\\src\\helpers\\MyLoader.tsx":"35","E:\\SilvenLEAF\\MyMovieList\\client\\src\\helpers\\MyWelcome.tsx":"36","E:\\SilvenLEAF\\MyMovieList\\client\\src\\helpers\\loaders\\SpinningLoader.tsx":"37","E:\\SilvenLEAF\\MyMovieList\\client\\src\\helpers\\loaders\\FlippingLoader.tsx":"38","E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\movie\\MovieDetails.tsx":"39","E:\\SilvenLEAF\\MyMovieList\\client\\src\\helpers\\FakeData\\FakeData.ts":"40","E:\\SilvenLEAF\\MyMovieList\\client\\src\\helpers\\FakeData\\movie\\movieDetailsData.ts":"41","E:\\SilvenLEAF\\MyMovieList\\client\\src\\helpers\\FakeData\\movie\\movieSearchData.ts":"42"},{"size":237,"mtime":1607655931186,"results":"43","hashOfConfig":"44"},{"size":425,"mtime":499162500000,"results":"45","hashOfConfig":"44"},{"size":1143,"mtime":1607679987399,"results":"46","hashOfConfig":"44"},{"size":546,"mtime":1607655898561,"results":"47","hashOfConfig":"44"},{"size":332,"mtime":1607680182020,"results":"48","hashOfConfig":"44"},{"size":387,"mtime":1607658851610,"results":"49","hashOfConfig":"44"},{"size":2500,"mtime":1608001728930,"results":"50","hashOfConfig":"44"},{"size":610,"mtime":1607658757765,"results":"51","hashOfConfig":"44"},{"size":2137,"mtime":1607827274483,"results":"52","hashOfConfig":"44"},{"size":605,"mtime":1607659821534,"results":"53","hashOfConfig":"44"},{"size":1024,"mtime":1607659844657,"results":"54","hashOfConfig":"44"},{"size":656,"mtime":1607655739090,"results":"55","hashOfConfig":"44"},{"size":1036,"mtime":1607830189365,"results":"56","hashOfConfig":"44"},{"size":4943,"mtime":1607680374189,"results":"57","hashOfConfig":"44"},{"size":7147,"mtime":1607680501132,"results":"58","hashOfConfig":"44"},{"size":3049,"mtime":1607659764471,"results":"59","hashOfConfig":"44"},{"size":4559,"mtime":1607661037963,"results":"60","hashOfConfig":"44"},{"size":1788,"mtime":1607655768970,"results":"61","hashOfConfig":"44"},{"size":516,"mtime":1607734169683,"results":"62","hashOfConfig":"44"},{"size":4038,"mtime":1607827274066,"results":"63","hashOfConfig":"44"},{"size":4142,"mtime":1607827275048,"results":"64","hashOfConfig":"44"},{"size":3765,"mtime":1607659400111,"results":"65","hashOfConfig":"44"},{"size":2417,"mtime":1607680298606,"results":"66","hashOfConfig":"44"},{"size":2374,"mtime":1607659754546,"results":"67","hashOfConfig":"44"},{"size":3612,"mtime":1607827274066,"results":"68","hashOfConfig":"44"},{"size":2860,"mtime":1607659181867,"results":"69","hashOfConfig":"44"},{"size":6347,"mtime":1607827275048,"results":"70","hashOfConfig":"44"},{"size":2952,"mtime":1607680220401,"results":"71","hashOfConfig":"44"},{"size":2240,"mtime":1607659994802,"results":"72","hashOfConfig":"44"},{"size":1172,"mtime":1607655724665,"results":"73","hashOfConfig":"44"},{"size":851,"mtime":1607655703750,"results":"74","hashOfConfig":"44"},{"size":852,"mtime":1607655699024,"results":"75","hashOfConfig":"44"},{"size":570,"mtime":1607660335023,"results":"76","hashOfConfig":"44"},{"size":333,"mtime":1607655861056,"results":"77","hashOfConfig":"44"},{"size":462,"mtime":1607660175453,"results":"78","hashOfConfig":"44"},{"size":492,"mtime":1607681227030,"results":"79","hashOfConfig":"44"},{"size":525,"mtime":1607681083128,"results":"80","hashOfConfig":"44"},{"size":526,"mtime":1607681077231,"results":"81","hashOfConfig":"44"},{"size":656,"mtime":1608003099511,"results":"82","hashOfConfig":"44"},{"size":187,"mtime":1608003021059,"results":"83","hashOfConfig":"44"},{"size":3047,"mtime":1608002967992,"results":"84","hashOfConfig":"44"},{"size":18688,"mtime":1608002782274,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"96gdw",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"88"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"88"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"88"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"88"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"88"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"88"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"88"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"88"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"88"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"88"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"88"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\SilvenLEAF\\MyMovieList\\client\\src\\index.tsx",[],["183","184"],"E:\\SilvenLEAF\\MyMovieList\\client\\src\\reportWebVitals.ts",[],["185","186"],"E:\\SilvenLEAF\\MyMovieList\\client\\src\\App.tsx",[],"E:\\SilvenLEAF\\MyMovieList\\client\\src\\PAGES\\RootAppStructure.tsx",[],"E:\\SilvenLEAF\\MyMovieList\\client\\src\\contexts\\subContexts\\AuthContext.tsx",["187"],"import React, { createContext } from 'react'\r\nimport UserDataInterface from '../../interfaces/UserDataInterface';\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface authContextInterface {\r\n    userData: UserDataInterface | undefined,\r\n    setUserData: Function\r\n}\r\n\r\n\r\n\r\n\r\nexport const AuthContext = createContext( {} as authContextInterface );\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","E:\\SilvenLEAF\\MyMovieList\\client\\src\\contexts\\RootContext.tsx",[],"E:\\SilvenLEAF\\MyMovieList\\client\\src\\PAGES\\Wrapper.tsx",[],"E:\\SilvenLEAF\\MyMovieList\\client\\src\\contexts\\subContexts\\AllUserContext.tsx",[],"E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\layouts\\Navbar.tsx",[],"E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\layouts\\BackToTopButton.tsx",[],"E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\layouts\\Footer.tsx",[],"E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\layouts\\MobileFooterNav.tsx",[],"E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\home\\Home.tsx",[],"E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\profile\\Profile.tsx",["188"],"import M from 'materialize-css'\r\nimport '../../styles/profile/Profile.scss'\r\n\r\n\r\nimport React, { useEffect, useContext } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport moment from 'moment'\r\n \r\n\r\n// interfaces\r\nimport UserDataInterface from '../../interfaces/UserDataInterface';\r\n\r\n\r\nimport { AuthContext } from '../../contexts/subContexts/AuthContext';\r\nimport { Toast } from '../../helpers/MyAlerts'\r\n\r\n\r\n\r\n\r\ntype authDataType = UserDataInterface | { msg: string } | undefined;\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Profile() {\r\n  useEffect(()=>{ \r\n    M.AutoInit();\r\n  }, [])\r\n  \r\n  \r\n  const { userData, setUserData } = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  \r\n\r\n  const deleteProfile = async () =>{    \r\n\r\n    Toast.fire({\r\n      icon: 'info',\r\n      title: 'Please wait...'\r\n    })\r\n\r\n    const userId = userData!._id;\r\n    \r\n    const deletedProfileRes = await fetch('/user/', {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({userId})\r\n    });\r\n\r\n    const deletedProfileData = await deletedProfileRes.json();\r\n\r\n    console.log(deletedProfileData)\r\n    \r\n    setTimeout(()=>{\r\n      history.push('/login')\r\n      setUserData(null);\r\n    }, 3000)\r\n  }\r\n \r\n\r\n  if(!userData) history.push('/login');\r\n  if(userData && !userData.isVerified) history.push('/verifyDoor');\r\n\r\n  return (\r\n    <div className=\"container myProfilePage\" >\r\n      <div className=\"mainProfileIcon\" style={{background: `url(${ userData!.profileImage || \"/Logo.png\" }) center/cover`}} ></div>\r\n\r\n      <div className=\"myProfileMainHeader\">\r\n        <div className=\"myProfileUserName\">{ userData!.username }</div>\r\n        <div className=\"myProfileTitle\" >{ userData!.title }</div>\r\n        <div className=\"myProfileLocation red-text\"> { userData!.location } </div>\r\n      </div>\r\n\r\n\r\n\r\n      <div className=\"row\">\r\n        \r\n\r\n      <div className=\"myProfileInfoHolder col s12 m6\">\r\n        <div>\r\n          <div className=\"myProfileInfoTitle\">\r\n            <i className=\"fa fa-home\"></i> Lives in \r\n          </div>\r\n          <div className=\"myProfileInfoAnswer\">\r\n            { userData!.location }\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <div>\r\n          <div className=\"myProfileInfoTitle\">\r\n            <i className=\"fa fa-rocket\"></i> Joined on\r\n          </div>\r\n          <div className=\"myProfileInfoAnswer\">\r\n            { moment(userData!.createdAt).calendar() }\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n        <div>\r\n          <div className=\"myProfileInfoTitle\">\r\n            <i className=\"fa fa-medkit\"></i> Working at\r\n          </div>\r\n          <div className=\"myProfileInfoAnswer\">\r\n            { userData!.workingAt ? userData!.workingAt : (\r\n              <span className=\"red-text\">no info given</span>\r\n            ) }\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n        <div>\r\n          <div className=\"myProfileInfoTitle\">\r\n            <i className=\"fa fa-graduation-cap\"></i> Career status\r\n          </div>\r\n          <div className=\"myProfileInfoAnswer\">\r\n          { userData!.careerStatus ? userData!.careerStatus : (\r\n              <span className=\"red-text\">no info given</span>\r\n            ) }\r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        <div>\r\n          <div className=\"myProfileInfoTitle\">\r\n            <i className=\"fa fa-share-alt\"></i> Website link\r\n          </div>\r\n          <div className=\"myProfileInfoAnswer\">\r\n          { userData!.websiteLink ? (\r\n            <a href={ (userData!.websiteLink.search('http://') === -1) ? 'https://' + userData!.websiteLink : userData!.websiteLink } target=\"_blank\" rel=\"noopener noreferrer\" >\r\n              { userData!.websiteLink }\r\n            </a>\r\n          ) : (\r\n              <span className=\"red-text\">no info given</span>\r\n            ) }\r\n            \r\n          </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n        <div>\r\n          <div className=\"myProfileInfoTitle\">\r\n            <i className=\"fab fa-twitter\"></i> Connect on Twitter\r\n          </div>\r\n          <div className=\"myProfileInfoAnswer\">\r\n          { userData!.twitterHandle ? userData!.twitterHandle : (\r\n              <span className=\"red-text\">no info given</span>\r\n            ) }\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n\r\n\r\n      <div className=\"myProfileAboutHolder col s12 m5 offset-m1\">\r\n      <p className=\"myProfileAbout\">\r\n        { userData!.about }\r\n      </p>\r\n\r\n       <div className=\"myProfileBtnsHolder myBtnsHolder right-align\">\r\n          <Link to=\"/updateProfile\" className=\"btn myBtn waves-effect waves-light myCornerless\"><i className=\"fa fa-edit\"></i> Update Account</Link>\r\n          <button className=\"btn myRedBtn waves-effect waves-light myCornerless\" onClick={ deleteProfile } ><i className=\"fa fa-trash\"></i> Delete Account</button>\r\n        </div>\r\n     </div>\r\n\r\n\r\n      </div>\r\n\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile\r\n","E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\profile\\UpdateProfile.tsx",[],"E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\contact\\Contact.tsx",[],"E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\profile\\UserProfile.tsx",[],"E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\profile\\UserList.tsx",["189","190","191","192"],"import M from 'materialize-css'\r\nimport '../../styles/profile/UserList.scss'\r\n\r\nimport React, { useEffect, useContext, useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { usePaginatedQuery } from 'react-query'\r\n \r\n \r\n\r\n\r\n\r\n\r\n\r\nimport { AuthContext } from '../../contexts/subContexts/AuthContext'\r\nimport { AllUserContext } from '../../contexts/subContexts/AllUserContext'\r\n\r\n\r\n\r\nimport UserListItem from './UserListItem'\r\nimport MyLoader from '../../helpers/MyLoader';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst getAllUsers = async ()=>{\r\n  \r\n\r\n  const allUserRes = await fetch('/user/all');\r\n  const allUserData = await allUserRes.json();\r\n\r\n  console.log(allUserData);\r\n  return allUserData\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction UserList() {\r\n  useEffect(()=>{\r\n    M.AutoInit();\r\n  }, [])\r\n\r\n\r\n\r\n\r\n\r\n  const { userData, setUserData } = useContext(AuthContext)\r\n  const { allUsers, setAllUsers } = useContext(AllUserContext)\r\n  const history = useHistory()\r\n  \r\n\r\n\r\n  const { resolvedData, latestData, status } = usePaginatedQuery(\"allusers\", getAllUsers)\r\n  if(resolvedData) setAllUsers(resolvedData);\r\n\r\n\r\n\r\n\r\n\r\n  if(!userData) history.push('/login');\r\n  if(userData && !userData.isVerified) history.push('/verifyDoor');\r\n\r\n  return !allUsers[0] ?  (\r\n    <div className=\"myLoaderPageHolder\">\r\n      <MyLoader/>\r\n    </div>\r\n  ) : (\r\n    <div className=\"container myUserListPage\" >      \r\n      <h6 className=\"blue-text\">All users</h6>\r\n\r\n\r\n      <ul>\r\n        {\r\n          allUsers[0] && allUsers.map((item, index)=>{\r\n            return (\r\n              <Link to={ \"/userProfile/\" + index } key={ index } >\r\n                <UserListItem item={ item } />\r\n              </Link>\r\n            )\r\n          })\r\n        }\r\n      </ul>\r\n\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserList\r\n","E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\actionPage\\ActionPage.tsx",["193","194"],"import M from 'materialize-css'\r\nimport '../../styles/ActionPage.scss';\r\n\r\n\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n \r\n \r\n\r\n\r\nimport MyWelcome from '../../helpers/MyWelcome'\r\n\r\n\r\n\r\n\r\nfunction ActionPage() {\r\n  useEffect(()=>{\r\n    M.AutoInit();\r\n  }, [])\r\n\r\n\r\n  \r\n  return (\r\n    <div className=\"container\" >\r\n      <div className=\"myLoaderPageHolder\">\r\n        <MyWelcome title=\"Welcome!\"/>      \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ActionPage\r\n","E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\auth\\signupLogin\\Signup.tsx",["195"],"import M from 'materialize-css'\r\nimport '../../../styles/auth/AuthDoor.scss'\r\n\r\n\r\nimport React, { useEffect, useState, useContext } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n \r\n \r\n\r\n\r\n\r\nimport { AuthContext } from '../../../contexts/subContexts/AuthContext'\r\nimport { Toast } from '../../../helpers/MyAlerts'\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Signup() {\r\n  useEffect(()=>{\r\n    M.AutoInit();\r\n  }, [])\r\n\r\n\r\n\r\n  \r\n  const { userData, setUserData } = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const [error, setError] = useState('')\r\n\r\n\r\n  const demoLogin = async ()=>{    \r\n\r\n    try {\r\n      \r\n      Toast.fire({\r\n        icon: 'info',\r\n        title: 'Please wait...'\r\n      })\r\n      \r\n  \r\n      const demoUser = { email: `demo@gmail.com`, password: `0123456789` };\r\n      \r\n      \r\n      \r\n  \r\n      \r\n  \r\n  \r\n      const loginRes = await fetch('/demo', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(demoUser)\r\n      });\r\n      \r\n      const loginData = await loginRes.json();\r\n      if(loginData.error) setError(loginData.msg);\r\n    \r\n  \r\n      \r\n  \r\n  \r\n      const loggedInUserRes = await fetch('/user');\r\n      const loggedInUserData = await loggedInUserRes.json();\r\n      if(loggedInUserData.error) setError(loggedInUserData.msg);\r\n  \r\n\r\n      console.log(loggedInUserData); \r\n      \r\n      if(loggedInUserData.user){\r\n        \r\n        setTimeout(()=>{\r\n          setUserData(loggedInUserData.user);\r\n          history.push('/');\r\n        }, 3000)\r\n      }\r\n  \r\n    } catch (err) {\r\n      console.log(err);\r\n\r\n      if(err.error) setError(err.msg);\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  if(userData) history.push('/')\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"container myAuthDoor\"\r\n      \r\n\r\n    >\r\n      <div className=\"myAuthAppName\">MyMovieList</div>\r\n      <div className=\"myAuthTitle\">Sign up a new account</div>\r\n\r\n\r\n      <form>\r\n\r\n\r\n\r\n\r\n        <div className=\"myOauthButtonsHolder\">\r\n          \r\n\r\n          <Link to=\"/signupForm\">\r\n          <div className=\"myOauthBtn myLocalAuth\">\r\n            <i className=\"fa fa-key\"></i> Sign up with Email\r\n          </div>\r\n          </Link>\r\n        \r\n          \r\n\r\n\r\n\r\n          <div className=\"myOauthBtn myDemoAuth\" onClick={ demoLogin } >\r\n            <i className=\"fa fa-key\"></i> Log in for DEMO\r\n          </div>\r\n\r\n\r\n\r\n          \r\n          \r\n          <div className=\"myOauthDividingOR\">OR</div>\r\n          <hr className=\"myOauthDividingHR\"/>\r\n          \r\n          \r\n          \r\n          \r\n          \r\n          <a href=\"/auth/google\" className=\"myOauthBtn myOauthGoogle\">\r\n            <i className=\"fa fa-google\"></i> Continue with Google\r\n          </a>\r\n          \r\n          \r\n          \r\n          \r\n          <a href=\"/auth/linkedin\" className=\"myOauthBtn myOauthLinkedin\">\r\n            <i className=\"fa fa-linkedin\"></i> Continue with LinkedIN\r\n          </a>\r\n          \r\n          \r\n          \r\n          \r\n          <a href=\"/auth/github\" className=\"myOauthBtn myOauthGithub\">\r\n            <i className=\"fa fa-github\"></i> Continue with Github\r\n          </a>\r\n          \r\n          \r\n          \r\n          <a href=\"/auth/twitter\" className=\"myOauthBtn myOauthTwitter\">\r\n            <i className=\"fa fa-twitter\"></i> Continue with Twitter\r\n          </a>\r\n          \r\n          \r\n          \r\n          <div className=\"myOauthBtn myOauthInstagram\">\r\n            <i className=\"fa fa-instagram\"></i> Continue with Instagram\r\n          </div>\r\n\r\n\r\n                            \r\n          \r\n          \r\n          <a href=\"/auth/facebook\" className=\"myOauthBtn myOauthFacebook\">\r\n            <i className=\"fa fa-facebook\"></i> Continue with Facebook\r\n          </a>\r\n          \r\n          \r\n          \r\n          \r\n\r\n\r\n        </div>\r\n\r\n\r\n        <div className=\"myAuthFormFooter\">\r\n          Already have an account? <Link to=\"/login\">Log in</Link>\r\n        </div>\r\n\r\n\r\n        \r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Signup\r\n","E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\auth\\signupLogin\\Login.tsx",[],"E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\auth\\reset\\ResetPassword.tsx",[],"E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\auth\\verify\\VerifyDoor.tsx",["196"],"import M from 'materialize-css'\r\nimport '../../../styles/VerifyDoor.scss';\r\n\r\n\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n \r\n \r\n\r\n\r\n\r\nimport { AuthContext } from '../../../contexts/subContexts/AuthContext'\r\nimport { Toast } from '../../../helpers/MyAlerts'\r\n\r\n\r\n\r\nfunction VerifyDoor() {\r\n  useEffect(()=>{\r\n    M.AutoInit();\r\n  }, [])\r\n\r\n\r\n  const { userData, setUserData } = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n  const [error, setError] = useState('');\r\n\r\n  const handleRequestVerification = async ()=>{\r\n    try {\r\n      Toast.fire({\r\n        icon: 'info',\r\n        title: 'Please wait...'\r\n      })\r\n      \r\n      const response = await fetch('/requestVerification', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ email: userData!.local!.email})\r\n      });\r\n  \r\n      const data = await response.json();\r\n      console.log(data)\r\n\r\n      if(data.error) {\r\n        setError(data.msg);\r\n      } else{\r\n        Toast.fire({\r\n          icon: 'success',\r\n          title: 'Check your email for further instructions'\r\n        })\r\n      }\r\n      \r\n\r\n      \r\n    } catch (err) {\r\n      console.log(err);\r\n      if(err.error) setError(err.msg)\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    if(error){\r\n      Toast.fire({\r\n        icon: 'error',\r\n        title: error\r\n      })\r\n    }\r\n  }, [error])\r\n\r\n\r\n\r\n\r\n  if(!userData) history.push('/login');\r\n  if(userData && userData.isVerified) history.push('/');\r\n  \r\n  \r\n  return (\r\n    <div className=\"container myVerifyDoorPage\"\r\n      \r\n\r\n    >\r\n      <h5 className=\"pageTitle red-text center-align\">Account NOT verified!</h5>\r\n\r\n      <p>\r\n        Your account is NOT verified. You must verify your account to continue. Click on the Verify Button to verify your account.\r\n      </p>\r\n\r\n      <p>\r\n        <span className=\"red-text\"> { userData!.local!.email } </span> Not your mail? Click on the Change Email Button to change your email.\r\n      </p>\r\n\r\n      <div className=\"myBtnsHolder right-align\">\r\n        <button className=\"btn myBtn myCornerless\" onClick={ handleRequestVerification } >Verify Account</button>\r\n        <Link to=\"/changeEmail\" className=\"btn mySecondaryBtn myCornerless\">Change Email</Link>\r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default VerifyDoor\r\n","E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\auth\\verify\\VerifyEmail.tsx",["197"],"import M from 'materialize-css'\r\nimport '../../../styles/VerifyDoor.scss';\r\n\r\n\r\n\r\n\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { Link, useHistory, useParams } from 'react-router-dom';\r\n \r\n \r\n\r\n\r\n\r\nimport { AuthContext } from '../../../contexts/subContexts/AuthContext'\r\nimport { Toast } from '../../../helpers/MyAlerts';\r\n\r\n\r\n\r\n\r\n\r\ninterface useParamsInterface {\r\n  token: string\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction VerifyEmail() {\r\n  useEffect(() => {\r\n    M.AutoInit();\r\n  }, [])\r\n\r\n\r\n  const { userData, setUserData } = useContext(AuthContext);\r\n\r\n  const { token } = useParams<useParamsInterface>();\r\n  const history = useHistory();\r\n  \r\n\r\n\r\n\r\n  const [error, setError] = useState('');\r\n\r\n\r\n  const handleVerify = ()=>{\r\n    \r\n\r\n    try {\r\n      \r\n      Toast.fire({\r\n        icon: 'info',\r\n        title: 'Please wait...'\r\n      })\r\n      \r\n      setTimeout( async()=>{\r\n        const response = await fetch('/verifyEmail', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({ token })\r\n        });\r\n    \r\n        const data = await response.json();\r\n  \r\n        console.log(data);\r\n  \r\n  \r\n        if(data.error) {\r\n          setError(data.msg);\r\n        } else {\r\n          Toast.fire({\r\n            icon: 'success',\r\n            title: 'Account Verified'\r\n          })\r\n          \r\n          setTimeout(()=>{\r\n            setUserData(data);\r\n            history.push('/');\r\n          }, 3000)\r\n        }\r\n      }, 3000)\r\n      \r\n  \r\n  \r\n  \r\n    } catch (err) {      \r\n      console.log(err);\r\n\r\n      if(err.error) setError(err.msg);\r\n\r\n    }\r\n    \r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  useEffect(()=>{\r\n    if(error){\r\n      Toast.fire({\r\n        icon: 'error',\r\n        title: error\r\n      })\r\n    }\r\n  }, [error])\r\n\r\n\r\n\r\n\r\n  \r\n  if(userData && userData.isVerified) history.push('/');\r\n\r\n\r\n  return (\r\n    <div className=\"container myVerifyDoorPage\"\r\n      \r\n\r\n    >\r\n      <h5 className=\"pageTitle red-text center-align\">Verify your Account</h5>\r\n\r\n      <p className=\"center-align\">\r\n        Click below to verify your email\r\n      </p>\r\n\r\n      \r\n      <div className=\"myBtnsHolder center-align\">\r\n        <button className=\"btn myBtn myCornerless\" onClick={ handleVerify } >Verify</button>\r\n      </div>\r\n      \r\n    </div>\r\n  )\r\n\r\n}\r\n\r\nexport default VerifyEmail\r\n","E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\auth\\signupLogin\\LogInForm.tsx",[],"E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\auth\\reset\\ForgottenForm.tsx",[],"E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\auth\\signupLogin\\SignUpForm.tsx",["198","199"],"import M from 'materialize-css'\r\nimport '../../../styles/auth/AuthDoor.scss'\r\nimport '../../../styles/auth/AuthForm.scss'\r\n\r\n\r\nimport React, { useEffect, useState, useContext } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n \r\n \r\n\r\n\r\n\r\nimport { AuthContext } from '../../../contexts/subContexts/AuthContext'\r\nimport { Toast } from '../../../helpers/MyAlerts'\r\n\r\n\r\n\r\n\r\nfunction SignUpForm() {\r\n  useEffect(()=>{\r\n    M.AutoInit();\r\n  }, [])\r\n\r\n\r\n\r\n  const { userData, setUserData } = useContext(AuthContext);\r\n  const history = useHistory();\r\n\r\n\r\n\r\n  const [username, setUsername] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  \r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  const [gender, setGender]= useState('male');\r\n  const [error, setError] = useState('');\r\n\r\n\r\n  const handleSubmit = async (e: React.MouseEvent<HTMLFormElement>)=>{\r\n    e.preventDefault();\r\n    \r\n    try {\r\n      Toast.fire({\r\n        icon: 'info',\r\n        title: 'Please wait...'\r\n      })\r\n  \r\n      const newUser: any = {};\r\n      if(username) newUser.username = username;\r\n      if(email) newUser.email = email.toLowerCase();    \r\n      if(password !== confirmPassword) return setError(`Type same password twice`);    \r\n      if(password) newUser.password = password;\r\n  \r\n  \r\n  \r\n  \r\n  \r\n      \r\n      const femaleIcons = [\r\n        'userFemaleBlue',\r\n        'userFemaleGreen',\r\n        'userFemaleOrange',\r\n        'userFemalePink',\r\n        'userFemalePurple',\r\n        'userFemaleRed',\r\n        'userFemaleTheme',\r\n        'userFemaleYellow',\r\n      ]\r\n      \r\n      const maleIcons = [\r\n        'userMaleBlue',\r\n        'userMaleGreen',\r\n        'userMaleOrange',\r\n        'userMalePink',\r\n        'userMalePurple',\r\n        'userMaleRed',\r\n        'userMaleTheme',\r\n        'userMaleYellow',\r\n      ]\r\n  \r\n      const n = Math.floor(Math.random() * maleIcons.length);\r\n  \r\n      newUser.profileImage = `/images/users/${ (gender === 'male') ?  maleIcons[n] : femaleIcons[n] }.png`\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n      \r\n  \r\n  \r\n      const signupRes = await fetch('/signup', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(newUser)\r\n      });\r\n      const signupData = await signupRes.json();\r\n      if(signupData.error) setError(signupData.msg);\r\n      \r\n      console.log(signupData)\r\n  \r\n  \r\n      \r\n      \r\n      const loggedInUserRes = await fetch('/user');\r\n      const loggedInUserData = await loggedInUserRes.json();\r\n      if(loggedInUserData.error) setError(loggedInUserData.msg);\r\n  \r\n      console.log(loggedInUserData); \r\n      \r\n      if(loggedInUserData.user){\r\n        \r\n        setTimeout(()=>{\r\n          setUserData(loggedInUserData.user);\r\n          history.push('/');\r\n        }, 3000)\r\n      }\r\n  \r\n    } catch (err) {\r\n      console.log(err);\r\n\r\n      if(err.error) setError(err.msg);\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  useEffect(()=>{\r\n    if(error){\r\n      Toast.fire({\r\n        icon: 'error',\r\n        title: error\r\n      })\r\n    }\r\n  }, [error])\r\n\r\n\r\n\r\n  if(userData) history.push('/')\r\n\r\n  return (\r\n    <div className=\"container myAuthForm\" >\r\n      <div className=\"myAuthAppName\">LingHun</div>\r\n      <div className=\"myAuthTitle\">Sign up a new account</div>\r\n\r\n      <p className=\"center-align red-text\"> { error } </p>\r\n\r\n\r\n      <form onSubmit={ handleSubmit } >\r\n        <div className=\"input-field\">\r\n          <i className=\"prefix fa fa-envelope\"></i>\r\n          <input type=\"email\" value={ email } onChange={ e=> setEmail(e.target.value) } required />\r\n          <label htmlFor=\"email\">Email <span className=\"red-text\">(Required)</span></label>\r\n        </div>\r\n\r\n        \r\n        \r\n        <div className=\"input-field\">\r\n          <i className=\"prefix fa fa-user-plus\"></i>\r\n          <input type=\"text\" value={ username } onChange={ e=> setUsername(e.target.value) } required />\r\n          <label htmlFor=\"username\">Your Username <span className=\"red-text\">(Required)</span></label>\r\n        </div>\r\n\r\n\r\n\r\n        <div className=\"input-field\">\r\n        <i className=\"prefix material-icons\">memory</i>\r\n          <input type=\"password\" required autoComplete=\"off\" \r\n            pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\r\n            title=\"Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters long\"\r\n\r\n            value={ password } onChange={ e=> setPassword(e.target.value) }\r\n           />\r\n          <label htmlFor=\"password\">Password <span className=\"red-text\">(Required) </span> </label>\r\n        </div>\r\n\r\n\r\n        <div className=\"input-field\">\r\n          <i className=\"prefix material-icons\">memory</i>\r\n          <input type=\"password\" autoComplete=\"off\" value={ confirmPassword } onChange={ e=> setConfirmPassword(e.target.value) } required />\r\n          <label htmlFor=\"confirmPassword\">Confirm Password <span className=\"red-text\">(Required)</span> </label>\r\n        </div>\r\n        \r\n        \r\n        \r\n        \r\n        <div className=\"input-field\">\r\n          <p>\r\n          \r\n            <label style={{ marginRight: \"50px\" }} >\r\n              <input type=\"radio\" id=\"maleRadio\" className=\"with-gap\" name=\"gender\" onChange={ e=> setGender('male') } />\r\n              <span>I'm Male</span>\r\n            </label>\r\n          \r\n          \r\n          \r\n            <label >\r\n              <input type=\"radio\" id=\"femaleRadio\" className=\"with-gap\" name=\"gender\" onChange={ e=> setGender('female') } />\r\n              <span>I'm Female</span>\r\n            </label>\r\n          \r\n          </p>        \r\n          \r\n          \r\n         \r\n        </div>\r\n\r\n\r\n\r\n\r\n        <p className=\"myAgreeTermsAndConditions\">\r\n          By signing up you confirm that you've read and agreed our <a href=\"#\">User Notice</a> and <a href=\"#\">Privacy Policy</a>\r\n        </p>\r\n\r\n\r\n        <div className=\"input-field right-align\">\r\n          <button className=\"btn myBtn waves-effect waves-light\">\r\n            Sign up\r\n          </button>\r\n        </div>\r\n\r\n       \r\n\r\n\r\n        <div className=\"myAuthFormFooter\">\r\n          Already have an account? <Link to=\"/login\">Log in</Link>\r\n        </div>\r\n\r\n\r\n        \r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUpForm\r\n","E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\auth\\verify\\ChangeEmail.tsx",[],"E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\layouts\\navLinks\\SignedInLinks.tsx",[],"E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\layouts\\navLinks\\SignedOutLinks.tsx",[],"E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\layouts\\footerNavLinks\\SignedOutFooterLinks.tsx",[],"E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\layouts\\footerNavLinks\\SignedInFooterLinks.tsx",[],"E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\profile\\UserListItem.tsx",[],"E:\\SilvenLEAF\\MyMovieList\\client\\src\\helpers\\MyAlerts.tsx",[],"E:\\SilvenLEAF\\MyMovieList\\client\\src\\helpers\\MyLoader.tsx",["200","201"],"import '../styles/loaders/Loader.scss'\r\n\r\nimport BouncingLoader from './loaders/BouncingLoader'\r\nimport SpinningLoader from './loaders/SpinningLoader'\r\nimport FlippingLoader from './loaders/FlippingLoader'\r\n\r\n\r\nimport React from 'react'\r\n\r\n\r\n\r\n\r\n\r\ninterface propsInterface {\r\n  title?: string\r\n}\r\n\r\n\r\n\r\n\r\nfunction MyLoader(props: propsInterface) {\r\n\r\n  return (\r\n    <>\r\n     <SpinningLoader title={ props.title } />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MyLoader\r\n","E:\\SilvenLEAF\\MyMovieList\\client\\src\\helpers\\MyWelcome.tsx",["202","203"],"import '../styles/loaders/Loader.scss'\r\n\r\nimport BouncingLoader from './loaders/BouncingLoader'\r\nimport SpinningLoader from './loaders/SpinningLoader'\r\nimport FlippingLoader from './loaders/FlippingLoader'\r\n\r\n\r\nimport React from 'react'\r\n\r\n\r\n\r\ninterface propsInterface {\r\n  title: string | undefined\r\n}\r\n\r\n\r\nfunction MyWelcome(props: propsInterface) {\r\n  return (\r\n    <>\r\n     <FlippingLoader title={ props.title ? props.title : \"Welcome!\" } />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MyWelcome\r\n","E:\\SilvenLEAF\\MyMovieList\\client\\src\\helpers\\loaders\\SpinningLoader.tsx",[],"E:\\SilvenLEAF\\MyMovieList\\client\\src\\helpers\\loaders\\FlippingLoader.tsx",[],"E:\\SilvenLEAF\\MyMovieList\\client\\src\\components\\movie\\MovieDetails.tsx",["204","205","206"],"// fake data\r\nimport FakeData from '../../helpers/FakeData/FakeData'\r\n\r\n\r\nimport M from 'materialize-css'\r\nimport '../../styles/movie/MovieDetails.scss';\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n \r\n \r\n\r\n\r\nimport MyWelcome from '../../helpers/MyWelcome'\r\n\r\n\r\n\r\n\r\nfunction MovieDetails() {\r\n  useEffect(()=>{\r\n    M.AutoInit();\r\n  }, [])\r\n\r\n\r\n  const item = FakeData.movieDetailsData;\r\n  \r\n  \r\n  return (\r\n    <div className=\"container\" >\r\n      <div className=\"myLoaderPageHolder\">\r\n        <MyWelcome title=\"Details Page!\"/>      \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MovieDetails\r\n","E:\\SilvenLEAF\\MyMovieList\\client\\src\\helpers\\FakeData\\FakeData.ts",["207"],"E:\\SilvenLEAF\\MyMovieList\\client\\src\\helpers\\FakeData\\movie\\movieDetailsData.ts",["208"],"E:\\SilvenLEAF\\MyMovieList\\client\\src\\helpers\\FakeData\\movie\\movieSearchData.ts",["209"],{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"210","replacedBy":"214"},{"ruleId":"212","replacedBy":"215"},{"ruleId":"216","severity":1,"message":"217","line":1,"column":8,"nodeType":"218","messageId":"219","endLine":1,"endColumn":13},{"ruleId":"216","severity":1,"message":"220","line":20,"column":6,"nodeType":"218","messageId":"219","endLine":20,"endColumn":18},{"ruleId":"216","severity":1,"message":"221","line":4,"column":40,"nodeType":"218","messageId":"219","endLine":4,"endColumn":48},{"ruleId":"216","severity":1,"message":"222","line":50,"column":21,"nodeType":"218","messageId":"219","endLine":50,"endColumn":32},{"ruleId":"216","severity":1,"message":"223","line":56,"column":25,"nodeType":"218","messageId":"219","endLine":56,"endColumn":35},{"ruleId":"216","severity":1,"message":"224","line":56,"column":37,"nodeType":"218","messageId":"219","endLine":56,"endColumn":43},{"ruleId":"216","severity":1,"message":"221","line":5,"column":28,"nodeType":"218","messageId":"219","endLine":5,"endColumn":36},{"ruleId":"216","severity":1,"message":"225","line":6,"column":10,"nodeType":"218","messageId":"219","endLine":6,"endColumn":14},{"ruleId":"216","severity":1,"message":"226","line":31,"column":10,"nodeType":"218","messageId":"219","endLine":31,"endColumn":15},{"ruleId":"216","severity":1,"message":"222","line":23,"column":21,"nodeType":"218","messageId":"219","endLine":23,"endColumn":32},{"ruleId":"216","severity":1,"message":"225","line":8,"column":10,"nodeType":"218","messageId":"219","endLine":8,"endColumn":14},{"ruleId":"227","severity":1,"message":"228","line":224,"column":69,"nodeType":"229","endLine":224,"endColumn":81},{"ruleId":"227","severity":1,"message":"228","line":224,"column":101,"nodeType":"229","endLine":224,"endColumn":113},{"ruleId":"216","severity":1,"message":"230","line":3,"column":8,"nodeType":"218","messageId":"219","endLine":3,"endColumn":22},{"ruleId":"216","severity":1,"message":"231","line":5,"column":8,"nodeType":"218","messageId":"219","endLine":5,"endColumn":22},{"ruleId":"216","severity":1,"message":"230","line":3,"column":8,"nodeType":"218","messageId":"219","endLine":3,"endColumn":22},{"ruleId":"216","severity":1,"message":"232","line":4,"column":8,"nodeType":"218","messageId":"219","endLine":4,"endColumn":22},{"ruleId":"216","severity":1,"message":"221","line":10,"column":28,"nodeType":"218","messageId":"219","endLine":10,"endColumn":36},{"ruleId":"216","severity":1,"message":"225","line":11,"column":10,"nodeType":"218","messageId":"219","endLine":11,"endColumn":14},{"ruleId":"216","severity":1,"message":"233","line":27,"column":9,"nodeType":"218","messageId":"219","endLine":27,"endColumn":13},{"ruleId":"234","severity":1,"message":"235","line":7,"column":1,"nodeType":"236","endLine":10,"endColumn":2},{"ruleId":"234","severity":1,"message":"235","line":1,"column":1,"nodeType":"236","endLine":108,"endColumn":2},{"ruleId":"234","severity":1,"message":"235","line":1,"column":1,"nodeType":"236","endLine":416,"endColumn":2},"no-native-reassign",["237"],"no-negated-in-lhs",["238"],["237"],["238"],"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'authDataType' is defined but never used.","'useState' is defined but never used.","'setUserData' is assigned a value but never used.","'latestData' is assigned a value but never used.","'status' is assigned a value but never used.","'Link' is defined but never used.","'error' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'BouncingLoader' is defined but never used.","'FlippingLoader' is defined but never used.","'SpinningLoader' is defined but never used.","'item' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]